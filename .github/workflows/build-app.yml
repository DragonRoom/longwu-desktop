name: Build and Release Electron App

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, macos-arm64, windows-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Install Dependencies
      run: npm install --force

    - name: Build
      run: npm run build
      env:
        CI: true

    - name: Package macOS DMG (Intel)
      if: matrix.os == 'macos-latest'
      run: |
        mv ./dist/*.dmg ./dist/longwu-mac-intel-${{ github.ref_name }}.dmg

    - name: Package macOS DMG (ARM)
      if: matrix.os == 'macos-arm64'
      run: |
        mv ./dist/*.dmg ./dist/longwu-mac-arm-${{ github.ref_name }}.dmg

    - name: Package Windows setup files
      if: matrix.os == 'windows-latest'
      run: Compress-Archive -Path ./dist/*.exe -DestinationPath ./dist/longwu-win-setup-${{ github.ref_name }}.zip

    - name: Package Windows win-unpacked directory
      if: matrix.os == 'windows-latest'
      run: Compress-Archive -Path ./dist/win-unpacked -DestinationPath ./dist/longwu-win-green-${{ github.ref_name }}.zip

    - uses: actions/upload-artifact@v2
      with:
        name: build-artifacts
        path: |
          dist/longwu-mac-intel-${{ github.ref_name }}.dmg
          dist/longwu-mac-arm-${{ github.ref_name }}.dmg
          dist/longwu-win-setup-${{ github.ref_name }}.zip
          dist/longwu-win-green-${{ github.ref_name }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@v2
      with:
        name: build-artifacts

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false

    - name: Upload macOS Intel DMG to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./longwu-mac-intel-${{ github.ref_name }}.dmg
        asset_name: longwu-mac-intel-${{ github.ref_name }}.dmg
        asset_content_type: application/octet-stream

    - name: Upload macOS ARM DMG to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./longwu-mac-arm-${{ github.ref_name }}.dmg
        asset_name: longwu-mac-arm-${{ github.ref_name }}.dmg
        asset_content_type: application/octet-stream

    - name: Upload Windows setup ZIP to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./longwu-win-setup-${{ github.ref_name }}.zip
        asset_name: longwu-win-setup-${{ github.ref_name }}.zip
        asset_content_type: application/zip

    - name: Upload Windows longwu-win-green ZIP to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./longwu-win-green-${{ github.ref_name }}.zip
        asset_name: longwu-win-green-${{ github.ref_name }}.zip
        asset_content_type: application/zip